; semi-working

.nolist
.include "m328pdef.inc"
.list
.dseg
.org SRAM_START
NUM_2_DISPLAY: .byte 2
.cseg
.org 0X0200
SEGTBL: 
.db 0x3f, 0x06, 0x53, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0xff, 0x77, 0x7e, 0x39, 0x53, 0x79, 0x71
;DIGLUT:
;.db 0b00111111,0b00000110,0b01010011,0b01001111,0b01100110,0b01101101,0b01111101,0b00000111,,0b01111111,,0b01100111,0b01110111,0b01111110,0b00111001,0b01011110, 0b01111001, 0b01110001
;I added the above, because it  says we have to convert the hex into two nibbles

; User-Defined Macros
.macro LDX ; loading XH and XL
	LDS @0, @2
	LDS @1, (@2+1)
.endmacro
.macro RESETALL
	;	resets all GPRs 
	LDI R16, $00
	LDI R17, $00
	LDI R18, $00
	LDI R19, $00
	LDI R20, $00
	LDI R21, $00
	LDI R22, $00
	LDI R23, $00
	LDI R24, $00
.endmacro

.macro IOSETUP
	;	initial IO setup
	LDI R16, @0
	LDI R17, @1
	OUT DDRB, R16
	OUT PORTB, R16
	OUT PORTB, R17 ;Not sure if this actually happens.  We tried something similar before we left for break
.endmacro



;initial setup
.ORG 0x000

; macro'd initial setup
RESETALL
IOSETUP $02, $03
LDX XL,XH, NUM_2_DISPLAY ;Grab from NUM_2_DISPLAY and load into high and low of X

LD R21, X+ ;
MOV R22, R21
SWAP R21
ANDI R21, 0x0F;sets R21 to the high nibble
ANDI R22, 0x0F; sets R22 to the low of the nibble
LDI R23, 0x00 ; offset from 0, 0 in table

LDI ZH, HIGH(SEGTBL<<1)
LDI ZL, LOW(SEGTBL<<1)
ADD ZL, R23
EOR R23,R23
ADC ZH,R23
LPM R24,Z
NOP
NOP
